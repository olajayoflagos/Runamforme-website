rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /errands/{errandId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /errandHistory/{historyId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /transactions/{transactionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }

    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
}
